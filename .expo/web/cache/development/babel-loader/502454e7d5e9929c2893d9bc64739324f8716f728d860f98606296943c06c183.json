{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skmola.TELKOM\\\\Desktop\\\\projects\\\\worko\\\\SCREENS\\\\MessagesScreen.js\";\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessagesScreen() {\n  return _jsxDEV(TouchableOpacity, {\n    style: styles.messageBox,\n    onPress: () => openMessage(contact),\n    children: [_jsxDEV(Image, {\n      source: {\n        uri: contact.profilePicture\n      },\n      style: styles.profilePicture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.textContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.contactName,\n        children: contact.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.messagePreview,\n        children: contact.messagePreview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n;\nconst openMessage = contact => {\n  console.log(`Opening messages for ${contact.name}`);\n};\nconst styles = StyleSheet.create({\n  messageBox: {\n    flexDirection: 'row',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  profilePicture: {\n    width: 50,\n    height: 50,\n    borderRadius: 25\n  },\n  textContainer: {\n    marginLeft: 10,\n    justifyContent: 'center'\n  },\n  contactName: {\n    fontWeight: 'bold'\n  },\n  messagePreview: {\n    color: '#888'\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","jsxDEV","_jsxDEV","MessagesScreen","TouchableOpacity","style","styles","messageBox","onPress","openMessage","contact","children","Image","source","uri","profilePicture","fileName","_jsxFileName","lineNumber","columnNumber","textContainer","contactName","name","messagePreview","console","log","create","flexDirection","padding","borderBottomWidth","borderBottomColor","width","height","borderRadius","marginLeft","justifyContent","fontWeight","color"],"sources":["C:/Users/skmola.TELKOM/Desktop/projects/worko/SCREENS/MessagesScreen.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { View, Text,StyleSheet } from \"react-native\";\r\n\r\nexport default function MessagesScreen() {\r\n  return (\r\n    <TouchableOpacity style={styles.messageBox} onPress={() => openMessage(contact)}>\r\n      <Image source={{ uri: contact.profilePicture }} style={styles.profilePicture} />\r\n      <View style={styles.textContainer}>\r\n        <Text style={styles.contactName}>{contact.name}</Text>\r\n        <Text style={styles.messagePreview}>{contact.messagePreview}</Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst openMessage = (contact) => {\r\n  // Logic to open the message window\r\n  console.log(`Opening messages for ${contact.name}`);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  messageBox: {\r\n    flexDirection: 'row',\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  profilePicture: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n  },\r\n  textContainer: {\r\n    marginLeft: 10,\r\n    justifyContent: 'center',\r\n  },\r\n  contactName: {\r\n    fontWeight: 'bold',\r\n  },\r\n  messagePreview: {\r\n    color: '#888',\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG/B,eAAe,SAASC,cAAcA,CAAA,EAAG;EACvC,OACED,OAAA,CAACE,gBAAgB;IAACC,KAAK,EAAEC,MAAM,CAACC,UAAW;IAACC,OAAO,EAAEA,CAAA,KAAMC,WAAW,CAACC,OAAO,CAAE;IAAAC,QAAA,GAC9ET,OAAA,CAACU,KAAK;MAACC,MAAM,EAAE;QAAEC,GAAG,EAAEJ,OAAO,CAACK;MAAe,CAAE;MAACV,KAAK,EAAEC,MAAM,CAACS;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChFjB,OAAA,CAACJ,IAAI;MAACO,KAAK,EAAEC,MAAM,CAACc,aAAc;MAAAT,QAAA,GAChCT,OAAA,CAACH,IAAI;QAACM,KAAK,EAAEC,MAAM,CAACe,WAAY;QAAAV,QAAA,EAAED,OAAO,CAACY;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EACtDjB,OAAA,CAACH,IAAI;QAACM,KAAK,EAAEC,MAAM,CAACiB,cAAe;QAAAZ,QAAA,EAAED,OAAO,CAACa;MAAc;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEvB;AAAC;AAED,MAAMV,WAAW,GAAIC,OAAO,IAAK;EAE/Bc,OAAO,CAACC,GAAG,CAAC,wBAAwBf,OAAO,CAACY,IAAI,EAAE,CAAC;AACrD,CAAC;AAED,MAAMhB,MAAM,GAAGN,UAAU,CAAC0B,MAAM,CAAC;EAC/BnB,UAAU,EAAE;IACVoB,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE,EAAE;IACXC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE;EACrB,CAAC;EACDf,cAAc,EAAE;IACdgB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE;EAChB,CAAC;EACDb,aAAa,EAAE;IACbc,UAAU,EAAE,EAAE;IACdC,cAAc,EAAE;EAClB,CAAC;EACDd,WAAW,EAAE;IACXe,UAAU,EAAE;EACd,CAAC;EACDb,cAAc,EAAE;IACdc,KAAK,EAAE;EACT;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}