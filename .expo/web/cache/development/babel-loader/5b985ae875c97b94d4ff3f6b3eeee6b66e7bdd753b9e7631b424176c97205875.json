{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skmola.TELKOM\\\\Desktop\\\\projects\\\\worko\\\\SCREENS\\\\MessageBox.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageBox = ({\n  contact\n}) => {\n  return _jsxDEV(TouchableOpacity, {\n    style: styles.messageBox,\n    onPress: () => openMessage(contact),\n    children: [_jsxDEV(Image, {\n      source: \"./assets/dog.png\",\n      style: styles.profilePicture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.textContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.contactName,\n        children: contact.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.messagePreview,\n        children: contact.messagePreview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\nconst openMessage = contact => {\n  console.log(`Opening messages for ${contact.name}`);\n};\nconst styles = StyleSheet.create({\n  messageBox: {\n    flexDirection: 'row',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  profilePicture: {\n    width: 50,\n    height: 50,\n    borderRadius: 25\n  },\n  textContainer: {\n    marginLeft: 10,\n    justifyContent: 'center'\n  },\n  contactName: {\n    fontWeight: 'bold'\n  },\n  messagePreview: {\n    color: '#888'\n  }\n});\nexport default MessageBox;","map":{"version":3,"names":["React","View","Text","Image","TouchableOpacity","StyleSheet","jsxDEV","_jsxDEV","MessageBox","contact","style","styles","messageBox","onPress","openMessage","children","source","profilePicture","fileName","_jsxFileName","lineNumber","columnNumber","textContainer","contactName","name","messagePreview","console","log","create","flexDirection","padding","borderBottomWidth","borderBottomColor","width","height","borderRadius","marginLeft","justifyContent","fontWeight","color"],"sources":["C:/Users/skmola.TELKOM/Desktop/projects/worko/SCREENS/MessageBox.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\r\n\r\n\r\nconst MessageBox = ({ contact }) => {\r\n  return (\r\n    <TouchableOpacity style={styles.messageBox} onPress={() => openMessage(contact)}>\r\n      <Image source=  {\"./assets/dog.png\"}/*{{ uri: contact.profilePicture }}*/ style={styles.profilePicture} />\r\n      <View style={styles.textContainer}>\r\n        <Text style={styles.contactName}>{contact.name}</Text>\r\n        <Text style={styles.messagePreview}>{contact.messagePreview}</Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst openMessage = (contact) => {\r\n  // Logic to open the message window\r\n  console.log(`Opening messages for ${contact.name}`);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  messageBox: {\r\n    flexDirection: 'row',\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  profilePicture: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n  },\r\n  textContainer: {\r\n    marginLeft: 10,\r\n    justifyContent: 'center',\r\n  },\r\n  contactName: {\r\n    fontWeight: 'bold',\r\n  },\r\n  messagePreview: {\r\n    color: '#888',\r\n  },\r\n});\r\n\r\nexport default MessageBox;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAClC,OACEF,OAAA,CAACH,gBAAgB;IAACM,KAAK,EAAEC,MAAM,CAACC,UAAW;IAACC,OAAO,EAAEA,CAAA,KAAMC,WAAW,CAACL,OAAO,CAAE;IAAAM,QAAA,GAC9ER,OAAA,CAACJ,KAAK;MAACa,MAAM,EAAI,kBAAmB;MAAsCN,KAAK,EAAEC,MAAM,CAACM;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1Gd,OAAA,CAACN,IAAI;MAACS,KAAK,EAAEC,MAAM,CAACW,aAAc;MAAAP,QAAA,GAChCR,OAAA,CAACL,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACY,WAAY;QAAAR,QAAA,EAAEN,OAAO,CAACe;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EACtDd,OAAA,CAACL,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACc,cAAe;QAAAV,QAAA,EAAEN,OAAO,CAACgB;MAAc;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEvB,CAAC;AAED,MAAMP,WAAW,GAAIL,OAAO,IAAK;EAE/BiB,OAAO,CAACC,GAAG,CAAC,wBAAwBlB,OAAO,CAACe,IAAI,EAAE,CAAC;AACrD,CAAC;AAED,MAAMb,MAAM,GAAGN,UAAU,CAACuB,MAAM,CAAC;EAC/BhB,UAAU,EAAE;IACViB,aAAa,EAAE,KAAK;IACpBC,OAAO,EAAE,EAAE;IACXC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE;EACrB,CAAC;EACDf,cAAc,EAAE;IACdgB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE;EAChB,CAAC;EACDb,aAAa,EAAE;IACbc,UAAU,EAAE,EAAE;IACdC,cAAc,EAAE;EAClB,CAAC;EACDd,WAAW,EAAE;IACXe,UAAU,EAAE;EACd,CAAC;EACDb,cAAc,EAAE;IACdc,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAe/B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}