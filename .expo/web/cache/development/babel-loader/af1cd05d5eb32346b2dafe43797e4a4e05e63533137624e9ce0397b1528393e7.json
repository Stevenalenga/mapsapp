{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar BASE_URL = \"http://127.0.0.1:8000\";\nvar UserApi = {\n  post: function () {\n    var _post = _asyncToGenerator(function* (url, data) {\n      try {\n        var response = yield fetch(\"\" + BASE_URL + url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n          throw new Error(\"Request failed\");\n        }\n        var result = yield response.json();\n        return result;\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    });\n    function post(_x, _x2) {\n      return _post.apply(this, arguments);\n    }\n    return post;\n  }()\n};\nexport default UserApi;","map":{"version":3,"names":["BASE_URL","UserApi","post","_post","_asyncToGenerator","url","data","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","error","message","_x","_x2","apply","arguments"],"sources":["C:/Users/skmola/Desktop/projects/worko/Api/UserApi.js"],"sourcesContent":["/*\r\nimport Api from \"./Api\";\r\n\r\nexport const UserApi = async (data) => {\r\n  try {\r\n    const result = await Api(\"/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      data: data,\r\n    });\r\n\r\n    return result;\r\n  } catch (error) {\r\n    return error.response.data;\r\n  }\r\n};\r\n\r\n*/\r\nconst BASE_URL = \"http://127.0.0.1:8000\";\r\n\r\nconst UserApi = {\r\n  post: async (url, data) => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}${url}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed\");\r\n      }\r\n\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  },\r\n};\r\n\r\nexport default UserApi;\r\n"],"mappings":";AAoBA,IAAMA,QAAQ,GAAG,uBAAuB;AAExC,IAAMC,OAAO,GAAG;EACdC,IAAI;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAE,WAAOC,GAAG,EAAEC,IAAI,EAAK;MACzB,IAAI;QACF,IAAMC,QAAQ,SAASC,KAAK,MAAIR,QAAQ,GAAGK,GAAG,EAAI;UAChDI,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;QAC3B,CAAC,CAAC;QAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;QACnC;QAEA,IAAMC,MAAM,SAAST,QAAQ,CAACU,IAAI,EAAE;QACpC,OAAOD,MAAM;MACf,CAAC,CAAC,OAAOE,KAAK,EAAE;QACd,MAAM,IAAIH,KAAK,CAACG,KAAK,CAACC,OAAO,CAAC;MAChC;IACF,CAAC;IAAA,SAAAjB,KAAAkB,EAAA,EAAAC,GAAA;MAAA,OAAAlB,KAAA,CAAAmB,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAArB,IAAA;EAAA;AACH,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}