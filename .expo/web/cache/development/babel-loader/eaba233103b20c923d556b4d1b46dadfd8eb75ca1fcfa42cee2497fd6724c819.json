{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar loginUser = function () {\n  var _ref = _asyncToGenerator(function* (email, password) {\n    try {\n      var response = yield axios.post(\"/login\", {\n        email: email,\n        password: password\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  });\n  return function loginUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\napp.post(\"/login\", function () {\n  var _ref2 = _asyncToGenerator(function* (req, res) {\n    var _req$body = req.body,\n      email = _req$body.email,\n      password = _req$body.password;\n    try {\n      var user = yield loginUser(email, password);\n      res.json(user);\n    } catch (error) {\n      res.status(400).json({\n        error: \"Invalid credentials\"\n      });\n    }\n  });\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"http://localhost:8000/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password\n          })\n        });\n        if (response.ok) {\n          var user = yield response.json();\n          navigation.navigate(\"Home\");\n        } else {\n          var error = yield response.json();\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    });\n    return function handleLogin() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    })]\n  });\n};\nexport default LoginScreen;","map":{"version":3,"names":["axios","React","useState","useNavigation","View","TextInput","Button","jsx","_jsx","jsxs","_jsxs","loginUser","_ref","_asyncToGenerator","email","password","response","post","data","error","_x","_x2","apply","arguments","app","_ref2","req","res","_req$body","body","user","json","status","_x3","_x4","LoginScreen","_useState","_useState2","_slicedToArray","setEmail","_useState3","_useState4","setPassword","handleLogin","_ref3","fetch","method","headers","JSON","stringify","ok","navigation","navigate","console","children","placeholder","value","onChangeText","secureTextEntry","title","onPress"],"sources":["C:/Users/skmola/Desktop/projects/worko/SCREENS/LoginScreen.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { View, TextInput, Button } from \"react-native\";\r\n\r\nconst loginUser = async (email, password) => {\r\n  try {\r\n    const response = await axios.post(\"/login\", { email, password });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\napp.post(\"/login\", async (req, res) => {\r\n  const { email, password } = req.body;\r\n\r\n  // Perform any necessary validation or error handling here\r\n\r\n  // Call the loginUser function\r\n  try {\r\n    const user = await loginUser(email, password);\r\n    res.json(user);\r\n  } catch (error) {\r\n    res.status(400).json({ error: \"Invalid credentials\" });\r\n  }\r\n});\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const user = await response.json();\r\n        // Handle successful login\r\n        navigation.navigate(\"Home\"); // Navigating to \"Home\" screen\r\n      } else {\r\n        const error = await response.json();\r\n        // Handle login error\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      // Handle network or other errors\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TextInput placeholder=\"Email\" value={email} onChangeText={setEmail} />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n      />\r\n      <Button title=\"Login\" onPress={handleLogin} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n\r\n/*import * as React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { SocialIcon } from \"react-native-elements\";\r\n\r\nfunction LoginScreen() {\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <View style={styles.parentContainer}>\r\n      <View style={styles.container}>\r\n        <Image\r\n          style={styles.tinyLogo}\r\n          source={require(\"../assets/Fidaac.png\")}\r\n        />\r\n        <View style={styles.box}>\r\n          <TextInput placeholder=\"Username\" style={styles.input} />\r\n          <TextInput\r\n            placeholder=\"Password\"\r\n            secureTextEntry\r\n            style={styles.input}\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate(\"Home\")}\r\n          style={styles.button}\r\n        >\r\n          <Text style={styles.buttonText}>Login</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity>\r\n          <SocialIcon\r\n            title=\"Sign in with Facebook\"\r\n            button\r\n            type=\"facebook\"\r\n            style={styles.socialButton}\r\n          />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity>\r\n          <SocialIcon\r\n            title=\"Sign in with Google\"\r\n            button\r\n            type=\"google\"\r\n            style={styles.socialButton}\r\n          />\r\n        </TouchableOpacity>\r\n        <Text>or</Text>\r\n        <TouchableOpacity onPress={() => navigation.navigate(\"Register\")}>\r\n          <Text style={styles.register}>Register</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  parentContainer: {\r\n    flex: 1,\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"#007AFF\",\r\n    borderRadius: 20,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 50,\r\n    alignSelf: \"center\",\r\n  },\r\n  buttonText: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: 18,\r\n  },\r\n  register: {\r\n    color: \"#0000ff\",\r\n    marginTop: 20,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    maxHeight: \"60%\",\r\n  },\r\n  box: {\r\n    width: \"80%\",\r\n    height: 200,\r\n    backgroundColor: \"#ffffff\",\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    marginBottom: 10,\r\n    borderWidth: 2,\r\n    borderColor: \"#cccccc\",\r\n    borderRadius: 10,\r\n    padding: 10,\r\n  },\r\n  tinyLogo: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}