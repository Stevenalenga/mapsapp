{"ast":null,"code":"import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport ProfileScreen from \"../SCREENS/ProfileScreen\";\nimport NotificationsScreen from \"../SCREENS/NotificationsScreen\";\nimport SearchScreen from \"../SCREENS/SearchScreen\";\nimport MessagesScreen from \"../SCREENS/MessagesScreen\";\nimport HomeScreen from \"../SCREENS/HomeScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar MainTabNavigator = function MainTabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home\";\n          } else if (route.name === \"Search\") {\n            iconName = focused ? \"search\" : \"search\";\n          } else if (route.name === \"Notifications\") {\n            iconName = focused ? \"bell\" : \"bell\";\n          } else if (route.name === \"Messages\") {\n            iconName = focused ? \"envelope\" : \"envelope\";\n          } else if (route.name === \"Profile\") {\n            iconName = focused ? \"user-circle\" : \"user-circle\";\n          }\n          return _jsx(FontAwesome, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"red\",\n        tabBarInactiveTintColor: \"gray\"\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Search\",\n      component: SearchScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Notifications\",\n      component: NotificationsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Messages\",\n      component: MessagesScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nexport default MainTabNavigator;","map":{"version":3,"names":["React","createBottomTabNavigator","NavigationContainer","FontAwesome","ProfileScreen","NotificationsScreen","SearchScreen","MessagesScreen","HomeScreen","jsx","_jsx","jsxs","_jsxs","Tab","MainTabNavigator","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","component"],"sources":["C:/Users/skmola/Desktop/projects/worko/ProfileTabNavigator/MainTabNavigator.js"],"sourcesContent":["import React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport ProfileScreen from \"../SCREENS/ProfileScreen\";\r\nimport NotificationsScreen from \"../SCREENS/NotificationsScreen\";\r\nimport SearchScreen from \"../SCREENS/SearchScreen\";\r\nimport MessagesScreen from \"../SCREENS/MessagesScreen\";\r\nimport HomeScreen from \"../SCREENS/HomeScreen\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst MainTabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === \"Home\") {\r\n            iconName = focused ? \"home\" : \"home\";\r\n          } else if (route.name === \"Search\") {\r\n            iconName = focused ? \"search\" : \"search\";\r\n          } else if (route.name === \"Notifications\") {\r\n            iconName = focused ? \"bell\" : \"bell\";\r\n          } else if (route.name === \"Messages\") {\r\n            iconName = focused ? \"envelope\" : \"envelope\";\r\n          } else if (route.name === \"Profile\") {\r\n            iconName = focused ? \"user-circle\" : \"user-circle\";\r\n          }\r\n\r\n          // You can return any component that you like here!\r\n          return <FontAwesome name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: \"red\",\r\n        tabBarInactiveTintColor: \"gray\",\r\n      })}\r\n    >\r\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\r\n      <Tab.Screen name=\"Search\" component={SearchScreen} />\r\n      <Tab.Screen name=\"Notifications\" component={NotificationsScreen} />\r\n      <Tab.Screen name=\"Messages\" component={MessagesScreen} />\r\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default MainTabNavigator;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,aAAa;AACpB,OAAOC,mBAAmB;AAC1B,OAAOC,YAAY;AACnB,OAAOC,cAAc;AACrB,OAAOC,UAAU;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/C,IAAMC,GAAG,GAAGZ,wBAAwB,EAAE;AAEtC,IAAMa,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAC7B,OACEF,KAAA,CAACC,GAAG,CAACE,SAAS;IACZC,aAAa,EAAE,SAAAA,cAAAC,IAAA;MAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAA,OAAQ;QAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;UAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;YAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;YAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;UACjC,IAAIC,QAAQ;UAEZ,IAAIN,KAAK,CAACO,IAAI,KAAK,MAAM,EAAE;YACzBD,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,MAAM;UACtC,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,QAAQ,EAAE;YAClCD,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,QAAQ;UAC1C,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,eAAe,EAAE;YACzCD,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,MAAM;UACtC,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,UAAU,EAAE;YACpCD,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,UAAU;UAC9C,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,SAAS,EAAE;YACnCD,QAAQ,GAAGH,OAAO,GAAG,aAAa,GAAG,aAAa;UACpD;UAGA,OAAOX,IAAA,CAACP,WAAW;YAACsB,IAAI,EAAED,QAAS;YAACD,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,EAAG;QAClE,CAAC;QACDI,qBAAqB,EAAE,KAAK;QAC5BC,uBAAuB,EAAE;MAC3B,CAAC;IAAA,CAAE;IAAAC,QAAA,GAEHlB,IAAA,CAACG,GAAG,CAACgB,MAAM;MAACJ,IAAI,EAAC,MAAM;MAACK,SAAS,EAAEtB;IAAW,EAAG,EACjDE,IAAA,CAACG,GAAG,CAACgB,MAAM;MAACJ,IAAI,EAAC,QAAQ;MAACK,SAAS,EAAExB;IAAa,EAAG,EACrDI,IAAA,CAACG,GAAG,CAACgB,MAAM;MAACJ,IAAI,EAAC,eAAe;MAACK,SAAS,EAAEzB;IAAoB,EAAG,EACnEK,IAAA,CAACG,GAAG,CAACgB,MAAM;MAACJ,IAAI,EAAC,UAAU;MAACK,SAAS,EAAEvB;IAAe,EAAG,EACzDG,IAAA,CAACG,GAAG,CAACgB,MAAM;MAACJ,IAAI,EAAC,SAAS;MAACK,SAAS,EAAE1B;IAAc,EAAG;EAAA,EACzC;AAEpB,CAAC;AAED,eAAeU,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}