{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skmola.TELKOM\\\\Desktop\\\\projects\\\\worko\\\\ProfileTabNavigator\\\\MainTabNavigator.js\";\nimport React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport ProfileScreen from \"../SCREENS/ProfileScreen\";\nimport NotificationsScreen from \"../SCREENS/NotificationsScreen\";\nimport SearchScreen from \"../SCREENS/SearchScreen\";\nimport MessagesScreen from \"../SCREENS/MessagesScreen\";\nimport HomeScreen from \"../SCREENS/HomeScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tab = createBottomTabNavigator();\nconst MainTabNavigator = () => {\n  return _jsxDEV(Tab.Navigator, {\n    screenOptions: ({\n      route\n    }) => ({\n      tabBarIcon: ({\n        focused,\n        color,\n        size\n      }) => {\n        let iconName;\n        if (route.name === \"home\") {\n          iconName = focused ? \"home\" : \"home\";\n        } else if (route.name === \"search\") {\n          iconName = focused ? \"search\" : \"search\";\n        } else if (route.name === \"notifications\") {\n          iconName = focused ? \"bell\" : \"bell\";\n        } else if (route.name === \"messages\") {\n          iconName = focused ? \"envelope\" : \"envelope\";\n        } else if (route.name === \"profile\") {\n          iconName = focused ? \"user-circle\" : \"user-circle\";\n        }\n        return _jsxDEV(FontAwesome, {\n          name: iconName,\n          size: size,\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 18\n        }, this);\n      },\n      tabBarActiveTintColor: \"red\",\n      tabBarInactiveTintColor: \"gray\"\n    }),\n    children: [_jsxDEV(Tab.Screen, {\n      name: \"home\",\n      component: HomeScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"search\",\n      component: SearchScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"notifications\",\n      component: NotificationsScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"messages\",\n      component: MessagesScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), _jsxDEV(Tab.Screen, {\n      name: \"profile\",\n      component: ProfileScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\nexport default MainTabNavigator;","map":{"version":3,"names":["React","createBottomTabNavigator","FontAwesome","ProfileScreen","NotificationsScreen","SearchScreen","MessagesScreen","HomeScreen","jsxDEV","_jsxDEV","Tab","MainTabNavigator","Navigator","screenOptions","route","tabBarIcon","focused","color","size","iconName","name","fileName","_jsxFileName","lineNumber","columnNumber","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","component"],"sources":["C:/Users/skmola.TELKOM/Desktop/projects/worko/ProfileTabNavigator/MainTabNavigator.js"],"sourcesContent":["import React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport ProfileScreen from \"../SCREENS/ProfileScreen\";\r\nimport NotificationsScreen from \"../SCREENS/NotificationsScreen\";\r\nimport SearchScreen from \"../SCREENS/SearchScreen\";\r\nimport MessagesScreen from \"../SCREENS/MessagesScreen\";\r\nimport HomeScreen from \"../SCREENS/HomeScreen\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst MainTabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === \"home\") {\r\n            iconName = focused ? \"home\" : \"home\";\r\n          } else if (route.name === \"search\") {\r\n            iconName = focused ? \"search\" : \"search\";\r\n          } else if (route.name === \"notifications\") {\r\n            iconName = focused ? \"bell\" : \"bell\";\r\n          } else if (route.name === \"messages\") {\r\n            iconName = focused ? \"envelope\" : \"envelope\";\r\n          } else if (route.name === \"profile\") {\r\n            iconName = focused ? \"user-circle\" : \"user-circle\";\r\n          }\r\n\r\n          // You can return any component that you like here!\r\n          return <FontAwesome name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: \"red\",\r\n        tabBarInactiveTintColor: \"gray\",\r\n      })}\r\n    >\r\n      <Tab.Screen name=\"home\" component={HomeScreen} />\r\n      <Tab.Screen name=\"search\" component={SearchScreen} />\r\n      <Tab.Screen name=\"notifications\" component={NotificationsScreen} />\r\n      <Tab.Screen name=\"messages\" component={MessagesScreen} />\r\n      <Tab.Screen name=\"profile\" component={ProfileScreen} />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default MainTabNavigator;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,mBAAmB,MAAM,gCAAgC;AAChE,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,UAAU,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,GAAG,GAAGT,wBAAwB,CAAC,CAAC;AAEtC,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,OACEF,OAAA,CAACC,GAAG,CAACE,SAAS;IACZC,aAAa,EAAEA,CAAC;MAAEC;IAAM,CAAC,MAAM;MAC7BC,UAAU,EAAEA,CAAC;QAAEC,OAAO;QAAEC,KAAK;QAAEC;MAAK,CAAC,KAAK;QACxC,IAAIC,QAAQ;QAEZ,IAAIL,KAAK,CAACM,IAAI,KAAK,MAAM,EAAE;UACzBD,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,MAAM;QACtC,CAAC,MAAM,IAAIF,KAAK,CAACM,IAAI,KAAK,QAAQ,EAAE;UAClCD,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,QAAQ;QAC1C,CAAC,MAAM,IAAIF,KAAK,CAACM,IAAI,KAAK,eAAe,EAAE;UACzCD,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,MAAM;QACtC,CAAC,MAAM,IAAIF,KAAK,CAACM,IAAI,KAAK,UAAU,EAAE;UACpCD,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,UAAU;QAC9C,CAAC,MAAM,IAAIF,KAAK,CAACM,IAAI,KAAK,SAAS,EAAE;UACnCD,QAAQ,GAAGH,OAAO,GAAG,aAAa,GAAG,aAAa;QACpD;QAGA,OAAOP,OAAA,CAACP,WAAW;UAACkB,IAAI,EAAED,QAAS;UAACD,IAAI,EAAEA,IAAK;UAACD,KAAK,EAAEA;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAClE,CAAC;MACDC,qBAAqB,EAAE,KAAK;MAC5BC,uBAAuB,EAAE;IAC3B,CAAC,CAAE;IAAAC,QAAA,GAEHlB,OAAA,CAACC,GAAG,CAACkB,MAAM;MAACR,IAAI,EAAC,MAAM;MAACS,SAAS,EAAEtB;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjDf,OAAA,CAACC,GAAG,CAACkB,MAAM;MAACR,IAAI,EAAC,QAAQ;MAACS,SAAS,EAAExB;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrDf,OAAA,CAACC,GAAG,CAACkB,MAAM;MAACR,IAAI,EAAC,eAAe;MAACS,SAAS,EAAEzB;IAAoB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnEf,OAAA,CAACC,GAAG,CAACkB,MAAM;MAACR,IAAI,EAAC,UAAU;MAACS,SAAS,EAAEvB;IAAe;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzDf,OAAA,CAACC,GAAG,CAACkB,MAAM;MAACR,IAAI,EAAC,SAAS;MAACS,SAAS,EAAE1B;IAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEpB,CAAC;AAED,eAAeb,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}