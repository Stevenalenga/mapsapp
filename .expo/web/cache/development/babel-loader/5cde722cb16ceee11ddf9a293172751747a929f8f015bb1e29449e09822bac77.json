{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post(\"hhttp://localhost:8000/login\", {\n          username: email,\n          password: password\n        });\n        var access_token = response.data.access_token;\n        Alert.alert(\"Login Successful\", \"Access Token: \" + access_token);\n        setEmail(\"\");\n        setPassword(\"\");\n      } catch (error) {\n        Alert.alert(\"Login Failed\", \"Incorrect email or password\");\n      }\n    });\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    })]\n  });\n};\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","TextInput","Button","Alert","axios","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","_ref","_asyncToGenerator","response","post","username","access_token","data","alert","error","apply","arguments","children","placeholder","value","onChangeText","secureTextEntry","title","onPress"],"sources":["C:/Users/skmola/Desktop/projects/worko/SCREENS/LoginScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, TextInput, Button, Alert } from \"react-native\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post(\"hhttp://localhost:8000/login\", {\r\n        username: email,\r\n        password: password,\r\n      });\r\n\r\n      const { access_token } = response.data;\r\n\r\n      // Handle successful login\r\n      // You can store the access token in AsyncStorage or Redux state for further usage\r\n\r\n      // Example: Show an alert with the access token\r\n      Alert.alert(\"Login Successful\", `Access Token: ${access_token}`);\r\n\r\n      // Clear email and password fields after successful login\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n    } catch (error) {\r\n      // Handle login error\r\n      // Display an error message to the user\r\n      Alert.alert(\"Login Failed\", \"Incorrect email or password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TextInput placeholder=\"Email\" value={email} onChangeText={setEmail} />\r\n      <TextInput\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={setPassword}\r\n      />\r\n      <Button title=\"Login\" onPress={handleLogin} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAExC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAAC,SAAA,GAA0BX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAI;QACF,IAAMC,QAAQ,SAASlB,KAAK,CAACmB,IAAI,CAAC,8BAA8B,EAAE;UAChEC,QAAQ,EAAEX,KAAK;UACfI,QAAQ,EAAEA;QACZ,CAAC,CAAC;QAEF,IAAQQ,YAAY,GAAKH,QAAQ,CAACI,IAAI,CAA9BD,YAAY;QAMpBtB,KAAK,CAACwB,KAAK,CAAC,kBAAkB,qBAAmBF,YAAY,CAAG;QAGhEX,QAAQ,CAAC,EAAE,CAAC;QACZI,WAAW,CAAC,EAAE,CAAC;MACjB,CAAC,CAAC,OAAOU,KAAK,EAAE;QAGdzB,KAAK,CAACwB,KAAK,CAAC,cAAc,EAAE,6BAA6B,CAAC;MAC5D;IACF,CAAC;IAAA,gBAvBKR,WAAWA,CAAA;MAAA,OAAAC,IAAA,CAAAS,KAAA,OAAAC,SAAA;IAAA;EAAA,GAuBhB;EAED,OACEtB,KAAA,CAACR,IAAI;IAAA+B,QAAA,GACHzB,IAAA,CAACL,SAAS;MAAC+B,WAAW,EAAC,OAAO;MAACC,KAAK,EAAEpB,KAAM;MAACqB,YAAY,EAAEpB;IAAS,EAAG,EACvER,IAAA,CAACL,SAAS;MACR+B,WAAW,EAAC,UAAU;MACtBG,eAAe;MACfF,KAAK,EAAEhB,QAAS;MAChBiB,YAAY,EAAEhB;IAAY,EAC1B,EACFZ,IAAA,CAACJ,MAAM;MAACkC,KAAK,EAAC,OAAO;MAACC,OAAO,EAAElB;IAAY,EAAG;EAAA,EACzC;AAEX,CAAC;AAED,eAAeV,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}